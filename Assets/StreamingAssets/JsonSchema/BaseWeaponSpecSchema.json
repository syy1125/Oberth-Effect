{
    "$id": "BaseWeaponSpecSchema",
    "type": "object",
    "properties": {
        "ProjectileWeaponEffect": {
            "allOf": [{ "$ref": "BaseWeaponEffectSpecSchema.json" }],
            "properties": {
                "BurstCount": {
                    "type": "integer",
                    "description": "The number of shots or clusters fired by a trigger pull.",
                    "default": 1
                },
                "BurstInterval": {
                    "type": "number",
                    "description": "The interval, in seconds, between shots in a burst."
                },
                "ClusterBaseAngles": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "default": [0],
                    "description": "The base deviation angle for each projectile in a cluster."
                },
                "SpreadAngle": { "type": "number" },
                "SpreadProfile": { "enum": ["None", "Gaussian", "Uniform"] },
                "ColliderSize": { "$ref": "Vector2Schema.json" },
                "MaxSpeed": {
                    "type": "number",
                    "description": "The speed of the projectile, in game units per second."
                },
                "MaxLifetime": { "type": "number" },
                "AimPointScaling": { "enum": ["None", "Lifetime", "Velocity"] },
                "AimPointScaleFactor": {
                    "type": "number",
                    "description": "Detected aim point distance is multiplied by this number. For example, a scale factor of 2 would mean that the aim point being at 50% of the max projectile distance is treated as 100%.",
                    "default": 1
                },
                "PointDefenseTarget": { "$ref": "PointDefenseTargetSpecSchema.json" },
                "HealthDamageScaling": {
                    "type": "number",
                    "description": "How much the projectile health affects the damage output of the projectile. For example, a value of 1 means that at 10% health, the projectile can do 10% of its original damage."
                },
                "ReloadTime": { "type": "number" },
                "Renderers": {
                    "$ref": "RendererSpecArraySchema.json",
                    "description": "Renderers for the projectile."
                },
                "ProjectileParticles": {
                    "$ref": "ParticleSystemSpecArraySchema.json"
                }
            }
        },
        "BurstBeamWeaponEffect": {
            "description": "Specifies a burst-fired beam weapon. Damage is interpreted as the damage the weapon should do in one burst.",
            "allOf": [{ "$ref": "BaseWeaponEffectSpecSchema.json" }],
            "properties": {
                "ReloadTime": {
                    "type": "number",
                    "description": "Time in seconds to reload this weapon"
                },
                "PreciseDuration": {
                    "type": "boolean",
                    "description": "If true, duration is measured in ticks rather than seconds."
                },
                "DurationTicks": {
                    "type": "integer",
                    "description": "Duration of the beam in ticks. Only applicable if PreciseDuration is true."
                },
                "DurationSeconds": {
                    "type": "number",
                    "description": "Duration of the beam in seconds. Only applicable if PreciseDuration is false."
                },
                "MaxRange": {
                    "type": "number",
                    "description": "Maximum range where the beam can do damage."
                },
                "BeamWidth": {
                    "type": "number",
                    "description": "The width of the beam's visual effect. Does not affect logical behaviour."
                },
                "BeamColor": {
                    "type": "string",
                    "description": "The color of the beam. Can be specified as a color scheme color."
                },
                "HitParticles": {
                    "$ref": "ParticleSystemSpecArraySchema.json"
                }
            }
        },
        "MissileLauncherEffect": {
            "description": "Specifies a missile launcher and the missile it launches.",
            "allOf": [{ "$ref": "BaseWeaponEffectSpecSchema.json" }],
            "properties": {
                "ColliderSize": { "$ref": "Vector2Schema.json" },
                "LaunchTubes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "Position": { "$ref": "Vector2Schema.json" },
                            "Rotation": { "type": "number" },
                            "LaunchVelocity": { "$ref": "Vector2Schema.json" }
                        }
                    }
                },
                "LaunchInterval": {
                    "type": "number",
                    "description": "The interval, in seconds, between consecutive launches. Applies even when the tubes are loaded."
                },
                "MaxAcceleration": { "type": "number" },
                "MaxAngularAcceleration": { "type": "number" },
                "MaxLifetime": { "type": "number" },
                "GuidanceAlgorithm": { "enum": ["Deadfire", "Predictive"] },
                "GuidanceActivationDelay": { "type": "number" },
                "PointDefenseTarget": { "$ref": "PointDefenseTargetSpecSchema.json" },
                "HealthDamageScaling": { "type": "number" },
                "ReloadTime": { "type": "number" },
                "Renderers": { "$ref": "RendererSpecArraySchema.json" },
                "PropulsionParticles": { "$ref": "ParticleSystemSpecArraySchema.json" }
            }
        },
        "DefaultBinding": {
            "enum": ["Manual1", "Manual2", "PointDefense"]
        }
    }
}